import {readFileSync,writeFileSync} from 'fs'

const lines=readFileSync('Unihan_Variants.txt','utf8').split(/\r?\n/);
const big5={}
readFileSync('big5.txt','utf8').split('').forEach(ch=>big5[ch]=true); //generated by extract-big5.js
const mapping={};

lines.forEach(line=>{
    const m=line.match(/U\+([\dA-F]{4})\tkSimplifiedVariant\tU\+([\dA-F]{4})/);
    if (m) {
        const tc=String.fromCharCode(parseInt(m[1],16));
        const ch=String.fromCharCode(parseInt(m[2],16));
        if (ch.codePointAt(0)>0x9FFF || ch.codePointAt(0)<0x3400) return;
        if (tc==ch) return; //余=余 ? 0x4F59 有32個字是自己的簡化字
        const sc=(big5[ch]?'~':'')+ch;
        if (!mapping[sc]) mapping[sc]='';
        mapping[sc]+=tc;
    }
})
const out=[];
for (let sc in mapping) {
    out.push(sc.replace(/^~/,'')+(sc[0]=='~'?'~':'=')+mapping[sc]);
}
writeFileSync('sc-tc-map.js','export const sc2tc=`'+out.join('\n')+'`','utf8');